generator client {
  provider        = "prisma-client-js"
  output          = "../../node_modules/@prisma-postgres/client"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  schemas   = ["private", "public"]
}

model Installation {
  db_id Int @id @default(autoincrement())

  event_id   String
  event_name String
  id         String @unique
  account    String
  sender     String
  created_at String
  updated_at String

  db_created_at DateTime  @default(now())
  db_updated_at DateTime  @updatedAt()
  db_deleted_at DateTime?
  db_deleted    Boolean   @default(false)

  InstallationAccount User @relation(name: "Installation_Account", fields: [account], references: [id], map: "installation_user_account")
  InstallationSender  User @relation(name: "Installation_Sender", fields: [sender], references: [id], map: "installation_user_sender")

  @@map("installation")
  @@schema("private")
}

model User {
  db_id Int @id @default(autoincrement())

  login               String
  id                  String @unique
  node_id             String
  avatar_url          String
  gravatar_id         String
  url                 String
  html_url            String
  following_url       String
  followers_url       String
  gists_url           String
  starred_url         String
  subscriptions_url   String
  organizations_url   String
  repos_url           String
  events_url          String
  received_events_url String
  type                String
  site_admin          String

  db_created_at DateTime  @default(now())
  db_updated_at DateTime  @updatedAt()
  db_deleted_at DateTime?
  db_deleted    Boolean   @default(false)

  AccountUser Installation[] @relation("Installation_Account")
  SenderUser  Installation[] @relation("Installation_Sender")

  @@map("user")
  @@schema("private")
}

model Repository {
  db_id Int @id @default(autoincrement())

  id                String
  node_id           String
  name              String
  full_name         String
  private           String
  owner             String
  html_url          String
  description       String
  fork              String
  url               String
  forks_url         String
  keys_url          String
  collaborators_url String
  teams_url         String
  hooks_url         String
  issue_events_url  String
  events_url        String
  assignees_url     String
  branches_url      String
  tags_url          String
  blobs_url         String
  git_tags_url      String
  git_refs_url      String
  trees_url         String
  statuses_url      String
  languages_url     String
  stargazers_url    String
  contributors_url  String
  subscribers_url   String
  subscription_url  String
  commits_url       String
  git_commits_url   String
  comments_url      String
  issue_comment_url String
  contents_url      String
  compare_url       String
  merges_url        String
  archive_url       String
  downloads_url     String
  issues_url        String
  pulls_url         String
  milestones_url    String
  notifications_url String
  labels_url        String
  releases_url      String
  deployments_url   String
  created_at        String
  updated_at        String
  pushed_at         String
  git_url           String
  ssh_url           String
  clone_url         String
  svn_url           String
  homepage          String
  size              String
  stargazers_count  String
  watchers_count    String
  language          String
  has_issues        String
  has_projects      String
  has_downloads     String
  has_wiki          String
  has_pages         String
  forks_count       String
  mirror_url        String
  archived          String
  disabled          String
  open_issues_count String
  license           String
  forks             String
  open_issues       String
  watchers          String
  default_branch    String

  db_created_at DateTime  @default(now())
  db_updated_at DateTime  @updatedAt()
  db_deleted_at DateTime?
  db_deleted    Boolean   @default(false)

  @@map("repository")
  @@schema("private")
}

model SiteContent {
  db_id         Int       @id @default(autoincrement())
  id            String
  name          String
  path          String
  sha           String
  size          String
  url           String
  html_url      String
  git_url       String
  download_url  String
  type          String
  content       String
  encoding      String
  db_created_at DateTime  @default(now())
  db_updated_at DateTime  @updatedAt()
  db_deleted_at DateTime?
  db_deleted    Boolean   @default(false)

  @@map("site_content")
  @@schema("private")
}
